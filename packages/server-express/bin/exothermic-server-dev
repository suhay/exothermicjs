#!/usr/bin/env node

const program = require(`commander`)
const { version } = require(`../package.json`)
require(`colors`)

program
  .version(version)
  .option(`-p, --port [port]`, `Port number`, 3000)
  .option(`--debug`, `Launches the server in development mode, and attaches the '--inspect' flag to the node command`)
  .parse(process.argv)

const nodemon = require(`nodemon`)
const childProcess = require(`child_process`)

const nodemonExec = program.debug ? `babel-node --inspect` : `babel-node`

nodemon({
  exec: nodemonExec,
  script: `./node_modules/.bin/exothermic-server`,
  ignore: [
    `node_cache/**/*`,
    `node_modules/**/*`,
    `demo/**/*`,
    `tests/**/*`,
    `public/**/*`,
    `dist/**/*`,
    `browser.js`,
    `loader.js`,
  ],
  verbose: true,
  args: [`--port=${program.port}`],
  ext: `js json`,
  env: { NODE_ENV: `development` },
  stdout: true,
  colours: true,
})
  .on(`restart`, (files) => {
    console.log(`ðŸ”„  ${`[exothermic-server]`.dim}: ${`Restarted due to`.magenta.bold}`, files)
  })
  .on(`start`, () => {
    console.log(`ðŸ’¡  ${`[exothermic-server]`.dim}: ${`Starting...`.green.bold}`)
  })
  .on(`quit`, () => {
    console.log(`\nðŸ‘‹  ${`[exothermic-server]`.dim}: ${`Has quit!`.bold}\n`)
    process.exit()
  })
  .on(`error`, (err) => {
    console.error(err)
  })

const webpackServer = childProcess.spawn(`./node_modules/.bin/webpack-dev-server`, [`--color`])
webpackServer.stdout.pipe(process.stdout)
webpackServer.stderr.pipe(process.stderr)
